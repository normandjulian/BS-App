{"version":3,"sources":["../../node_modules/@angular/core/@angular lazy","../../src lazy","../../src/providers/back-stat.provider.ts","../../src/pages/login/login.ts","../../src/pages/dashboard/dashboard.ts","../../src/pages/dashboard/create-team/create-team.ts","../../src/pages/dashboard/create-game/create-game.ts","../../src/pages/register/register.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/app/app.component.ts","../../src/pages/dashboard/create-team/create-team-service.ts","../../src/pages/login/login-service.ts","../../src/pages/register/register-service.ts","../../src/pipes/reduce-name.pipe.ts","../../src/pipes/initiale.pipe.ts","../../src/providers/service-interceptor.service.ts","../../src/pages/dashboard/player/create-player/create-player.ts","../../src/pages/dashboard/player/manage-player/manage-player.ts","../../src/pages/dashboard/dashboard-service.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 115;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/@angular lazy\n// module id = 115\n// module chunks = 0","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 156;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 156\n// module chunks = 0","import {Injectable} from '@angular/core';\nimport {Team} from \"../classes/team.class\";\nimport {Observable} from \"rxjs/Observable\";\nimport {Subject} from \"rxjs/Subject\";\n\n@Injectable()\nexport class BackStatProvider {\n    public _token: string;\n    public _uri: string = 'http://127.0.0.1:8080';\n\n    public teams: Team[];\n    public subject: Subject<Team[]> = new Subject<Team[]>();\n\n    constructor() {\n    }\n\n    set_token(token: string) {\n        this._token = token;\n    }\n\n    get_token() {\n        return this._token;\n    }\n\n    get_uri() {\n        return this._uri;\n    }\n\n    set_teams(teams: Team[]): void {\n        this.teams = teams;\n        this.subject.next(teams);\n    }\n\n    get_teams(): Observable<Team[]> {\n        return this.subject.asObservable();\n    }\n\n    get_pure_teams(): Team[] {\n        return this.teams;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/back-stat.provider.ts","import {Component, OnInit} from '@angular/core';\nimport {NavController, AlertController, NavParams, ModalController} from 'ionic-angular';\nimport {FormBuilder, Validators} from '@angular/forms';\n\nimport {Storage} from '@ionic/storage';\nimport {DashboardPage} from '../dashboard/dashboard';\nimport {BackStatProvider} from '../../providers/back-stat.provider';\nimport {LoginService} from \"./login-service\";\nimport {RegisterPage} from \"../register/register\";\n\n@Component({\n  selector: 'page-login',\n  templateUrl: 'login.html',\n  providers: [LoginService]\n})\n\nexport class LoginPage implements OnInit {\n  public user: Guest;\n  public isLogged: Boolean = false;\n  public login_form: any = null;\n  public toStore: boolean = false;\n\n  constructor(private navCtrl: NavController,\n              private storage: Storage,\n              private alertCtrl: AlertController,\n              private fb: FormBuilder,\n              private modalCtrl: ModalController,\n              private navParams: NavParams,\n              private service: LoginService,\n              private bs: BackStatProvider) {\n  }\n\n  /**\n   * Display a notification to the layout\n   * @param  {string} message [The message to display]\n   */\n  notification(message: string): void {\n    this.alertCtrl.create({\n      title: 'Information',\n      subTitle: message,\n      buttons: ['OK']\n    }).present();\n  }\n\n  /**\n   * Login to the application\n   * @param  {Guest}  guest [The pair login/password]\n   */\n  sign_in(guest: Guest): void {\n    this.service.sign_in(guest).subscribe(\n      (token: Token) => {\n        if (token['error']) {\n          this.notification(token['message']);\n        } else {\n          this.storage.set('credits', JSON.stringify(token));\n          console.log(token.token);\n          this.bs.set_token(token.token);\n          this.navCtrl.setRoot(DashboardPage);\n        }\n      },\n      err => console.log(err)\n    );\n  }\n\n  /**\n   * Redirect to the page Register\n   */\n  goto_registerPage(): void {\n    this.modalCtrl.create(RegisterPage).present();\n  }\n\n  save_credits() {\n    // TODO\n  }\n\n  lf_credits_storage() {\n    this.storage.get('credits').then(res => {\n      if (res) {\n        let user = JSON.parse(res);\n        this.sign_in({\n          'email': user.email,\n          'password': user.password\n        });\n      }\n    });\n  }\n\n  /**\n   * Initialisation of the page\n   */\n  ngOnInit() {\n    this.login_form = this.fb.group({\n      email: ['', [<any>Validators.required]],\n      password: ['', [<any>Validators.required]]\n    });\n\n    // Check the storage for auto signin\n    // this.lf_credits_storage();\n\n    // Get the email from the RegisterPage\n    if (typeof this.navParams.get('email') !== 'undefined') {\n      this.login_form.setValue({\n        email: this.navParams.get('email')\n      });\n    }\n\n    this.sign_in({\n      email: 'normandjulian@gmail.com',\n      password: 'juju'\n    });\n  }\n}\n\nclass Token {\n  email: string;\n  token: string;\n  _id: string;\n}\n\nclass Guest {\n  email: string;\n  password: string;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.ts","import { GameFull } from './../../classes/game.class';\nimport { AlertController, NavController, ModalController } from 'ionic-angular';\nimport { Component } from '@angular/core';\nimport { DashboardService } from './dashboard-service';\nimport { Game } from '../../classes/game.class';\nimport { Team, TeamFull } from '../../classes/team.class';\nimport { Player } from '../../classes/player.class';\nimport { CreateTeamPage } from './create-team/create-team';\nimport { BackStatProvider } from \"../../providers/back-stat.provider\";\nimport { CreateGamePage } from \"./create-game/create-game\";\nimport _ from 'lodash';\n\n@Component({\n  selector: 'page-dashboard',\n  templateUrl: 'dashboard.html',\n  providers: [DashboardService]\n})\n\nexport class DashboardPage {\n  public teams: Array<Team | TeamFull>;\n  public team: TeamFull;\n  public game: GameFull;\n  public pane: string;\n  public selected_player: Player;\n  public selected_team: Team; // The team selected in the UI <select/>\n  public selected_game: Game;\n  public layout: any = {\n    zero_player: false,\n    create_player: false,\n    zero_game: false,\n    create_game: false\n  };\n\n  constructor(private navController: NavController,\n    private service: DashboardService,\n    private alertCtrl: AlertController,\n    private modalCtrl: ModalController,\n    private bs: BackStatProvider) {\n  }\n\n  delete_team(_id) {\n    /*this.notification('Supprimer cette équipe ?', 'Supprimer une équipe, supprime aussi ses joueurs, ses matchs et ses statistiques', 'Peu m\\'importe', () => {\n     this.service.delete_team(_id).subscribe(\n     res => {\n     for (let key in this.teams) {\n     if (this.teams[key]._id === _id) {\n     this.teams.splice(Number(key), 1);\n     }\n     }\n     },\n     err => console.log(err)\n     );\n     });*/\n  }\n\n  /**\n   * Store the game selected by the user\n   * @param  {Game} game [description]\n   */\n  select_game(game: Game) {\n    if ((this.selected_game === game) || (game === null)) {\n      this.selected_game = null;\n    } else {\n      this.selected_game = game;\n    }\n  }\n\n  /**\n   * Display a notification for the user\n   * @param  {string} title    [The title of the notification]\n   * @param  {string} message  [Its message]\n   * @param  {string} btnLabel [The text of the button]\n   * @param  {any}    callback [Any function to pass after the notification]\n   */\n  notification(title: string, message: string, btnLabel: string, callback: any): void {\n    this.alertCtrl.create({\n      title: title,\n      message: message,\n      buttons: [\n        {\n          text: 'Annuler',\n          role: 'cancel',\n          handler: () => {\n          }\n        }, {\n          text: btnLabel,\n          handler: () => callback()\n        }\n      ]\n    }).present();\n  }\n\n  /**\n   * Nav to the StatPage\n   * @param  {string} id [The game's id]\n   */\n  goto_stat(id: string): void {\n    // this.navController.push(StatPage, {\n    //   team_id: this.team._id,\n    //   game_id: id\n    // });\n  }\n\n  /************************************************************/\n  /*************************** TEAM ***************************/\n  /************************************************************/\n\n  /**\n   * Select the team which the user tap on it\n   */\n  set_team(team: Team) {\n    this.service.get_team(team._id).subscribe(\n      (team: TeamFull) => {\n        this.team = team;\n\n        if (this.team.players.length === 0) {\n          this.layout.zero_player = true;\n          this.pane = 'players';\n        } else {\n          this.selected_player = _.first(this.team.players);\n          this.pane = 'games';\n\n          if (this.team.games.length === 0) {\n            this.layout.zero_game = true;\n          } else {\n            this.selected_game = _.first(this.team.games);\n            this.get_game(this.selected_game);\n          }\n        }\n      }\n    );\n  }\n\n  /**\n   * GO TO -> Create a team\n   */\n  goto_create_team(): void {\n    this.modalCtrl.create(CreateTeamPage).present();\n  }\n\n  /************************************************************/\n  /*************************** GAME ***************************/\n  /************************************************************/\n\n  public goto_create_game() {\n    let create_game_page = this.modalCtrl.create(CreateGamePage, this.team);\n    create_game_page.onDidDismiss(\n      (response: Game) => {\n        if (response) {\n          this.team.games.push(response);\n        }\n      }\n    );\n    create_game_page.present();\n  }\n\n  public get_game(game: Game) {\n    this.service.get_game(game._id).subscribe(\n      (response: Game) => this.game = response,\n      (error: any) => console.log(error)\n    );\n  }\n\n  /*************************************************************/\n  /************************** PLAYER ***************************/\n  /*************************************************************/\n\n  public goto_first_player() {\n    this.layout.create_player = true;\n    this.layout.zero_player = false;\n  }\n\n  /**\n   * When a the user create a new player\n   * Come from the Output of app-create-player\n   * @param player {Player}\n   */\n  public new_player(player: Player) {\n    this.team.players.push(player);\n    this.selected_player = _.last(this.team.players);\n    this.layout.create_player = false;\n    this.layout.zero_player = false;\n  }\n\n  /**\n   * When the user [cancel] the player creation\n   * Show the players if the team have some\n   * Else display the zero player UI\n   */\n  public create_player_cancel() {\n    // If there are players\n    if (this.team.players.length > 0) {\n      this.layout.create_player = false;\n    } else {\n      // Else, display the zero player UI\n      this.layout.zero_player = true;\n    }\n  }\n\n  /**\n   * When the user update the player\n   * From the app-manage-player\n   * Update the player, to update the list\n   * @param player {Player}\n   */\n  public update_player(player: Player) {\n    let player_index = _.findIndex(this.team.players, { _id: player._id });\n    this.team.players[player_index] = player;\n  }\n\n  /************************************************************/\n\n  ionViewDidLoad() {\n    this.bs.get_teams().subscribe(\n      (teams: Array<Team | TeamFull>) => {\n        this.teams = teams;\n        if (this.teams.length !== 0) {\n          this.selected_team = _.last(this.teams);\n          this.set_team(_.last(this.teams));\n        }\n      }\n    );\n\n    this.service.get_teams().subscribe(\n      (teams: Team[]) => this.bs.set_teams(teams),\n      err => console.error(err)\n    );\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/dashboard/dashboard.ts","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { NavController, NavParams, Platform, ViewController } from 'ionic-angular';\nimport { TeamService } from './create-team-service';\nimport { BackStatProvider } from \"../../../providers/back-stat.provider\";\nimport { Team, TeamFull } from \"../../../classes/team.class\";\n\n@Component({\n    selector: 'page-create-team',\n    templateUrl: 'create-team.html',\n    providers: [TeamService]\n})\nexport class CreateTeamPage implements OnInit {\n    public team_form = null;\n\n    constructor(public viewCtrl: ViewController,\n        public bs: BackStatProvider,\n        public fb: FormBuilder,\n        public service: TeamService) {\n    }\n\n    /**\n     * Save (update or create) the current team\n     * @param  {[Object]} value [description]\n     */\n    create(value) {\n        let teams: Team[];\n        this.service.create_team(value).subscribe(\n            (team: TeamFull) => {\n                teams = this.bs.get_pure_teams();\n                teams.push(team);\n                this.bs.set_teams(teams);\n                this.viewCtrl.dismiss();\n            },\n            err => console.error(err)\n        )\n    }\n\n    ngOnInit() {\n        // The form for the team\n        this.team_form = this.fb.group({\n            name: ['', [<any>Validators.required]],\n            coach: ['', []],\n            period: this.fb.group({\n                type: [4, [<any>Validators.required]],\n                time: [10, [<any>Validators.required]]\n            }),\n        });\n    };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/dashboard/create-team/create-team.ts","import { Team, TeamFull } from './../../../classes/team.class';\nimport { NavParams, ModalController, ViewController } from 'ionic-angular';\nimport { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { DashboardService } from '../dashboard-service';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\nimport { Game } from \"../../../classes/game.class\";\nimport _ from 'lodash';\n@Component({\n  selector: 'page-create-game',\n  templateUrl: 'create-game.html',\n  providers: [DashboardService]\n})\n\nexport class CreateGamePage {\n  public team: TeamFull;\n  public game_form: FormGroup;\n  public menu_create: boolean;\n\n  constructor(\n    private service: DashboardService,\n    private fb: FormBuilder,\n    private params: NavParams,\n    private view: ViewController) {\n\n    // #TODO Add a input mask for the time\n    this.game_form = this.fb.group({\n      opponent: ['', [<any>Validators.required]],\n      date: [new Date().toISOString(), [<any>Validators.required]],\n      time: ['20:00', [Validators.pattern('([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]')]],\n      period: this.fb.group({\n        type: [4, [<any>Validators.required]],\n        time: [10, [<any>Validators.required]]\n      }),\n      home: [true, []]\n    });\n  }\n\n  /**\n   * Create a new game\n   * @param {Game} game \n   * @param {boolean} isValid \n   */\n  public create(game: Game, isValid: boolean) {\n    game.team_id = this.team._id;\n    game.players = _.filter(this.team.players, (player) => {\n      return (!player.dnp);\n    }).map((player) => {\n      return player._id;\n    });\n    this.service.create_game(game).subscribe(\n      (response: Game) => {\n        this.view.dismiss(response);\n      },\n      (err) => console.log(err)\n    );\n  }\n\n  ionViewDidLoad() {\n    this.team = this.params.data;\n    this.game_form.patchValue({\n      period: {\n        type: (this.team.period && this.team.period.type) ? this.team.period.type : 4,\n        time: (this.team.period && this.team.period.time) ? this.team.period.time : 10,\n      }\n    });\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/dashboard/create-game/create-game.ts","import {Component, OnInit} from '@angular/core';\nimport {ViewController, AlertController, ToastController} from 'ionic-angular';\nimport {FormBuilder, Validators, FormGroup} from '@angular/forms';\n\nimport {RegisterService} from './register-service';\nimport {Club} from '../../classes/club.class';\nimport {RegisterUser} from '../../classes/user.class';\nimport {HttpErrorResponse} from \"@angular/common/http\";\n\n@Component({\n  selector: 'register-page',\n  templateUrl: 'register.html',\n  providers: [RegisterService]\n})\nexport class RegisterPage implements OnInit {\n  public clubs: Club[] = [];\n  public register_form: FormGroup;\n\n  constructor(public viewCtrl: ViewController,\n              public toastCtrl: ToastController,\n              public registerService: RegisterService,\n              private fb: FormBuilder,\n              public alertCtrl: AlertController) {\n\n    // Define the form\n    this.register_form = fb.group({\n      email: ['', [<any>Validators.required]],\n      lastname: ['', []],\n      firstname: ['', []],\n      password: ['', [<any>Validators.required]],\n      confirm_pwd: ['', [<any>Validators.required]],\n      club_id: ['', [<any>Validators.required]]\n    });\n  };\n\n  /**\n   * Let the user register to our application\n   * @param  {RegisterUser} value   The form\n   * @param  {boolean} isValid Is the form valid\n   */\n  register(value: RegisterUser, isValid: boolean): void {\n    if (RegisterPage.validate_password(value.password, value.confirm_pwd)) {\n      this.registerService.sign_up(value).subscribe(\n        () => {\n          this.toastCtrl.create({\n            message: 'Votre compte à été créé',\n            duration: 3000,\n            position: 'bottom'\n          }).present();\n          this.viewCtrl.dismiss();\n        },\n        (err: HttpErrorResponse) => {\n          if (err.error instanceof Error) {\n            // A client-side or network error occurred. Handle it accordingly.\n            console.log('An error occurred:', err.error.message);\n          } else {\n            // The backend returned an unsuccessful response code.\n            // The response body may contain clues as to what went wrong,\n            this.notification('Error', `Message : ${err.error.code} <br/> Message : ${err.error.errmsg}`);\n            console.error(`Backend returned code ${err.status}, body was: ${err.error}`);\n          }\n        }\n      );\n    } else {\n      this.notification('Information', 'Vos mots de passes ne correspondent pas');\n    }\n  }\n\n  /**\n   * Return a boolean if both password are equals\n   * @param  {string}  p1 first password\n   * @param  {string}  p2 confirm password\n   * @return {boolean}    is both are equals\n   */\n  static validate_password(p1: string, p2: string): boolean {\n    return p1 === p2;\n  }\n\n  /**\n   * Display a notification is case of error or information\n   * @param {string} title - The title of the notification\n   * @param {string} message The message to display\n   */\n  public notification(title: string, message: string): void {\n    this.alertCtrl.create({\n      title: title,\n      subTitle: message,\n      buttons: ['OK']\n    }).present();\n  }\n\n  ngOnInit() {\n    this.registerService.get_clubs().subscribe(\n      res => this.clubs = res,\n      error => console.log(error)\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/register/register.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from \"@angular/common/http\";\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { StatusBar } from '@ionic-native/status-bar';\n\nimport { MyApp } from './app.component';\nimport { LoginPage } from '../pages/login/login';\nimport { BackStatProvider } from \"../providers/back-stat.provider\";\nimport { IonicStorageModule } from '@ionic/storage';\nimport { DashboardPage } from \"../pages/dashboard/dashboard\";\nimport { ReduceNamePipe } from \"../pipes/reduce-name.pipe\";\nimport { InitialePipe } from \"../pipes/initiale.pipe\";\nimport { CreateTeamPage } from \"../pages/dashboard/create-team/create-team\";\nimport { ServiceInterceptorService } from \"../providers/service-interceptor.service\";\nimport { CreatePlayerComponent } from \"../pages/dashboard/player/create-player/create-player\";\nimport { ManagePlayerComponent } from \"../pages/dashboard/player/manage-player/manage-player\";\nimport { RegisterPage } from \"../pages/register/register\";\nimport { CreateGamePage } from \"../pages/dashboard/create-game/create-game\";\n\n@NgModule({\n  declarations: [\n    MyApp,\n    LoginPage,\n    DashboardPage,\n    RegisterPage,\n    ReduceNamePipe,\n    InitialePipe,\n    CreateTeamPage,\n    CreateGamePage,\n    CreatePlayerComponent,\n    ManagePlayerComponent\n  ],\n  imports: [\n    BrowserModule,\n    IonicModule.forRoot(MyApp),\n    IonicStorageModule.forRoot(),\n    HttpClientModule\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp,\n    LoginPage,\n    RegisterPage,\n    DashboardPage,\n    CreateTeamPage,\n    CreateGamePage\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    BackStatProvider,\n    { provide: ErrorHandler, useClass: IonicErrorHandler },\n    { provide: HTTP_INTERCEPTORS, useClass: ServiceInterceptorService, multi: true }\n  ]\n})\nexport class AppModule {\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\n\nimport { LoginPage } from '../pages/login/login';\n@Component({\n  templateUrl: 'app.html'\n})\nexport class MyApp {\n  rootPage:any = LoginPage;\n\n  constructor(platform: Platform, statusBar: StatusBar, splashScreen: SplashScreen) {\n    platform.ready().then(() => {\n      // Okay, so the platform is ready and our plugins are available.\n      // Here you can do any higher level native things you might need.\n      statusBar.styleDefault();\n      splashScreen.hide();\n    });\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Rx';\nimport { BackStatProvider } from \"../../../providers/back-stat.provider\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { TeamFull } from \"../../../classes/team.class\";\nimport 'rxjs/add/operator/toPromise';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\n\n@Injectable()\nexport class TeamService {\n    constructor(public http: HttpClient, public bs: BackStatProvider) {\n    }\n\n    /**\n     * Create a new team\n     * @param {Team} team\n     * @returns {Observable<TeamFull>}\n     */\n    create_team(team): Observable<TeamFull> {\n        return this.http.post<TeamFull>(`${this.bs.get_uri()}/teams`, team);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/dashboard/create-team/create-team-service.ts","// import {, RequestOptions, Response} from '@angular/http';\nimport {HttpClient} from \"@angular/common/http\";\nimport {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs/Rx';\nimport {BackStatProvider} from \"../../providers/back-stat.provider\";\n\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\n\n@Injectable()\nexport class LoginService {\n  public headers: Object = {'Content-Type': 'application/json'};\n\n  constructor(public http: HttpClient, private bs: BackStatProvider) {\n  }\n\n  sign_in(guest: Guest): Observable<Object> { // +++++++++++++++++++++++++++++++++++++++++++++++++> Sign in\n    return this.http.post(`${this.bs.get_uri()}/signin`, guest);\n  }\n}\n\nclass Guest {\n  email: string;\n  password: string;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login-service.ts","import {Injectable} from '@angular/core';\nimport 'rxjs/add/operator/toPromise';\nimport {Observable} from 'rxjs/Rx';\n\nimport {Club} from '../../classes/club.class';\nimport {RegisterUser} from '../../classes/user.class';\nimport {HttpClient} from \"@angular/common/http\";\nimport {BackStatProvider} from \"../../providers/back-stat.provider\";\n\n@Injectable()\nexport class RegisterService {\n    constructor(public http: HttpClient, private bs: BackStatProvider) {\n    }\n\n    get_clubs(): Observable<Club[]> { // ++++++++++++++++++++++++++++++++++++++++++++++++++++++> Get Clubs\n        return this.http.get<Club[]>(`${this.bs.get_uri()}/clubs`);\n    };\n\n    sign_up(guest: RegisterUser): Observable<Object> { // +++++++++++++++++++++++++++++++++++++++++++++++++> Sign up\n        return this.http.post(`${this.bs.get_uri()}/signup`, guest);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/register/register-service.ts","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'reduceName' })\nexport class ReduceNamePipe implements PipeTransform {\n    /**\n     *\n     * @param {any[]} array - Will be the Array of team to sort\n     * @param {string} arg - will be the argument to sort (ex: 'score', 'made', ‘cashed'\n     * @returns {TeamSM[]}\n     */\n    transform(lastname: string, limit: number): string {\n        if (lastname.length > limit) {\n            lastname = lastname.substring(0, (limit - 3)) + '...';\n        }\n        return lastname;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pipes/reduce-name.pipe.ts","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'initiale' })\nexport class InitialePipe implements PipeTransform {\n    /**\n     *\n     * @param {any[]} array - Will be the Array of team to sort\n     * @param {string} arg - will be the argument to sort (ex: 'score', 'made', ‘cashed'\n     * @returns {TeamSM[]}\n     */\n    transform(name: string): string {\n        return name.charAt(0) + '.';\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pipes/initiale.pipe.ts","import {Injectable} from '@angular/core';\nimport {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http';\nimport 'rxjs/add/operator/do';\nimport {BackStatProvider} from \"./back-stat.provider\";\nimport {Observable} from \"rxjs/Observable\";\n@Injectable()\nexport class ServiceInterceptorService implements HttpInterceptor {\n\n    constructor(public bs: BackStatProvider) {\n    }\n\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        // Get the auth header from the service.\n        const token = this.bs.get_token();\n\n        if (token) {\n            // Clone the request to add the new header.\n            const authReq = req.clone({headers: req.headers.set('x-access-token', token)});\n            // Pass on the cloned request instead of the original request.\n            return next.handle(authReq);\n        } else {\n            return next.handle(req);\n        }\n\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/service-interceptor.service.ts","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { DashboardService } from '../../dashboard-service';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\nimport { Player } from \"../../../../classes/player.class\";\n\n@Component({\n    selector: 'app-create-player',\n    templateUrl: 'create-player.html',\n    providers: [DashboardService]\n})\nexport class CreatePlayerComponent implements OnInit {\n    @Input() team;\n    @Output() player: EventEmitter<Player> = new EventEmitter<Player>();\n    @Output() cancel: EventEmitter<boolean> = new EventEmitter<boolean>();\n    public player_form: FormGroup;\n    public menu_create: boolean;\n\n    constructor(private service: DashboardService, private fb: FormBuilder) {\n        this.player_form = this.fb.group({\n            number: ['', [<any>Validators.required]],\n            firstname: ['', [<any>Validators.required]],\n            lastname: ['', [<any>Validators.required]],\n            birthdate: ['', []],\n            license: ['', []]\n        });\n    }\n\n    public create_player(player: Player) {\n        player.team_id = this.team._id;\n        this.service.create_player(player).subscribe(\n            (response: Player) => this.player.emit(response),\n            (err) => console.log(err)\n        );\n    }\n\n    public cancel_create_player() {\n        this.cancel.emit(true);\n    }\n\n    ngOnInit() {\n        //Called after the constructor, initializing input properties, and the first call to ngOnChanges.\n        this.player_form.patchValue({\n            birthdate: new Date()\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/dashboard/player/create-player/create-player.ts","import {Component, EventEmitter, Input, OnChanges, Output, SimpleChange, SimpleChanges} from '@angular/core';\nimport {DashboardService} from '../../dashboard-service';\nimport {FormBuilder, Validators, FormGroup} from '@angular/forms';\nimport {Player} from \"../../../../classes/player.class\";\n\n@Component({\n    selector: 'app-manage-player',\n    templateUrl: 'manage-player.html',\n    providers: [DashboardService]\n})\n\nexport class ManagePlayerComponent implements OnChanges{\n    @Input() player;\n    @Output() updated_player: EventEmitter<Player> = new EventEmitter<Player>();\n    public player_form: FormGroup;\n\n    constructor(private service: DashboardService, private fb: FormBuilder) {\n\n        this.player_form = this.fb.group({\n            _id: ['', [<any>Validators.required]],\n            number: ['', [<any>Validators.required]],\n            firstname: ['', [<any>Validators.required]],\n            lastname: ['', [<any>Validators.required]],\n            birthdate: ['', []],\n            license: ['', []]\n        });\n    }\n\n    public update_player(player: Player) {\n        this.service.update_player(player).subscribe(\n            (response: Player) => this.updated_player.emit(response)\n        );\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.hasOwnProperty('player')) {\n            this.player_form.patchValue({\n                _id: changes.player.currentValue._id,\n                number: changes.player.currentValue.number,\n                firstname: changes.player.currentValue.firstname,\n                lastname: changes.player.currentValue.lastname,\n                birthdate: changes.player.currentValue.birthdate || null,\n                license: changes.player.currentValue.license || null\n            });\n\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/dashboard/player/manage-player/manage-player.ts","import { Game, GameFull } from './../../classes/game.class';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Rx';\nimport { Team, TeamFull } from '../../classes/team.class';\nimport 'rxjs/add/operator/toPromise';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\nimport { BackStatProvider } from \"../../providers/back-stat.provider\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Player } from \"../../classes/player.class\";\n\n@Injectable()\nexport class DashboardService {\n    // Initialisation for the storage api\n    constructor(public http: HttpClient,\n        public bs: BackStatProvider) {\n    }\n\n    /**\n     * Get the list of all the teams\n     * @returns {Observable<Team[]>}\n     */\n    get_teams(): Observable<Team[]> {\n        return this.http.get<Team[]>(`${this.bs.get_uri()}/teams`);\n    }\n\n    /**\n     * Get the actual team selected by the user\n     * @param  {string}               team_id [the id of the team selected]\n     * @return {Observable<TeamFull>}         [the team selected]\n     */\n    public get_team(team_id: string): Observable<TeamFull> {\n        return this.http.get<TeamFull>(`${this.bs.get_uri()}/teams/${team_id}/full`);\n    }\n\n    public create_player(player: Player): Observable<Player> {\n        return this.http.post<Player>(`${this.bs.get_uri()}/players`, player);\n    }\n\n    public update_player(player: Player): Observable<Player> {\n        return this.http.put<Player>(`${this.bs.get_uri()}/players/${player._id}`, player);\n    }\n\n    /************************************************************/\n    /*************************** GAME ***************************/\n    /************************************************************/\n\n    /**\n     * Create a game linked to its team with the attribute team_id\n     * @param  {Game} game - The game to create\n     * @returns {Observable<Team[]>} - The game created\n     */\n    public create_game(game: Game): Observable<Game> {\n        return this.http.post<Game>(`${this.bs.get_uri()}/games`, game);\n    }\n\n    /**\n     * Get the actual game selected by the user\n     * @param  {string}               game_id [the id of the game selected]\n     * @return {Observable<GameFull>}         [the game selected]\n     */\n    public get_game(game_id: string): Observable<GameFull> {\n        return this.http.get<GameFull>(`${this.bs.get_uri()}/games/${game_id}/full`);\n    }\n\n    /*  delete_team(_id: String) {\n     let headers = new Headers({ 'x-access-token': this.token });\n     let options = new RequestOptions({ headers: headers });\n\n     return this.http.delete(`${this.config.apiEndpoint}teams/${_id}`, options)\n     .map((res: Response) => res.json())\n     .catch((error: any) => Observable.throw(error.json().error || 'Server error')); // ...errors if any\n     }\n\n     get_games(team_id: String): Observable<Game[]> {\n     let headers = new Headers({ 'x-access-token': this.token });\n     let options = new RequestOptions({ headers: headers });\n     if (this.config.network) {\n     return this.http.get(`${this.config.apiEndpoint}teams/${team_id}/games`, options)\n     .map((res: Response) => res.json())\n     .catch((error: any) => Observable.throw(error.json().error || 'Server error')); // ...errors if any\n     } else {\n     let games = GAMES.filter(game => {\n     return game.team_id === team_id;\n     });\n     return Observable.of(games);\n     }\n     }*/\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/dashboard/dashboard-service.ts"],"sourceRoot":""}